version: '3.8'

volumes:
  db_data_dev:

services:
  # frontend-dev:  # TODO: Change
  #   build: ./path/to/your/reactjs/Dockerfile
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - springboot-backend-dev
  #     - fastapi-backend-dev

  springboot-backend-dev:
    build:
      dockerfile: ./Dockerfile
      context: ./iwcd-lct2023-backend
    ports:
      - "8080:8080"
    depends_on:
      - db-dev
      - fastapi-backend-dev
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.backend-iwcd.loadbalancer.server.port=8080"
      - "traefik.http.routers.backend-iwcd.rule=Host(`backend-iwcd.seizure.icu`)"
      - "traefik.http.routers.backend-iwcd.entrypoints=websecure"
      - "traefik.http.routers.backend-iwcd.tls=true"

  fastapi-backend-dev:
    build:
      dockerfile: ../Dockerfile
      context: ./ML/model
    ports:
      - "3333:3333"  # Check proper port number
    volumes:
      - "./ml-models/gazprom_model:/model/app/models:ro"
    depends_on:
      - db-dev
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.fastapi-backend-iwcd.loadbalancer.server.port=3333"
      - "traefik.http.routers.fastapi-backend-iwcd.rule=Host(`fastapi-backend-iwcd.seizure.icu`)"
      - "traefik.http.routers.fastapi-backend-iwcd.entrypoints=websecure"
      - "traefik.http.routers.fastapi-backend-iwcd.tls=true"

  db-dev:
    image: postgres:15
    ports:
      - "15432:5432"
    env_file: ./.env
    volumes:
      - "db_data_dev:/var/lib/postgresql/data"
