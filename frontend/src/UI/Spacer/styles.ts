import styled from 'styled-components';
import { DEFAULT_VALUE } from '../../constants/styles';

const DEFAULT_DIRECTION = 'column';
const DEFAULT_WIDTH = 'unset';

type ContainerStyledProps = {
	$direction?: 'row' | 'column';
	$gap?: `${number}px`;
	$spaceTop?: `${number}px`;
	$spaceBottom?: `${number}px`;
	$spaceLeft?: `${number}px`;
	$spaceRight?: `${number}px`;
	$justifyContent?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly';
	$alignItems?: 'flex-start' | 'flex-end' | 'center';
	$alignSelf?: 'flex-start' | 'flex-end' | 'center';
	$justifySelf?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly';
	$padding?: string;
	$fullWidth?: boolean;
	$fullHeight?: boolean;
	$flexGrow?: boolean;
	$width?: string;
	$height?: `${number}px`;
	$minWidth?: string;
	$maxWidth?: string;
	$minHeight?: string;
	$maxHeight?: string;
	$backgroundColor?: string;
	$backgroundImage?: string;
	$backgroundSize?: string;
	$borderRadius?: string;
	$borderTop?: string;
	$borderBottom?: string;
	$borderLeft?: string;
	$borderRight?: string;
	$border?: string;
	$cursor?: string;
	$overflow?: 'hidden' | 'visible' | 'scroll' | 'auto';
	$position?: 'relative' | 'absolute' | 'fixed' | 'sticky' | 'static';
	$top?: string;
	$left?: string;
	$right?: string;
	$bottom?: string;
};

export const Container = styled.div<ContainerStyledProps>`
	display: flex;
	background-repeat: no-repeat;
	background-position: center;

	flex-direction: ${props => props.$direction ?? DEFAULT_DIRECTION};
	gap: ${props => props.$gap ?? DEFAULT_VALUE};
	margin-top: ${props => props.$spaceTop ?? DEFAULT_VALUE};
	margin-bottom: ${props => props.$spaceBottom ?? DEFAULT_VALUE};
	margin-left: ${props => props.$spaceLeft ?? DEFAULT_VALUE};
	margin-right: ${props => props.$spaceRight ?? DEFAULT_VALUE};
	justify-content: ${props => props.$justifyContent ?? DEFAULT_VALUE};
	align-items: ${props => props.$alignItems ?? DEFAULT_VALUE};
	align-self: ${props => props.$alignSelf ?? DEFAULT_VALUE};
	justify-self: ${props => props.$justifySelf ?? DEFAULT_VALUE};
	padding: ${props => `${props.$padding ?? DEFAULT_VALUE}`};
	width: ${props => (props.$fullWidth ? '100%' : props.$width ? props.$width : DEFAULT_WIDTH)};
	height: ${props => (props.$fullHeight ? '100%' : props.$height ? props.$height : DEFAULT_WIDTH)};
	min-width: ${props => props.$minWidth ?? DEFAULT_WIDTH};
	max-width: ${props => props.$maxWidth ?? DEFAULT_WIDTH};
	min-height: ${props => (props.$fullHeight ? '100vh' : props.$minHeight ?? DEFAULT_WIDTH)};
	max-height: ${props => props.$maxHeight ?? DEFAULT_WIDTH};
	flex-grow: ${props => (props.$flexGrow ? '1' : DEFAULT_WIDTH)};
	//flex-grow: ${props => (props.$fullWidth ? 1 : DEFAULT_VALUE)};
	background-color: ${props => props.$backgroundColor ?? DEFAULT_VALUE};
	background-image: ${props => (props.$backgroundImage ? `url(${props.$backgroundImage})` : DEFAULT_VALUE)};
	background-size: ${props => props.$backgroundSize ?? 'contain'};
	border-radius: ${props => props.$borderRadius ?? DEFAULT_VALUE};
	border-top: ${props => props.$borderTop ?? ''};
	border-bottom: ${props => props.$borderBottom ?? ''};
	border-left: ${props => props.$borderLeft ?? ''};
	border-right: ${props => props.$borderRight ?? ''};
	border: ${props => props.$border ?? ''};
	cursor: ${props => props.$cursor ?? DEFAULT_VALUE};
	overflow: ${props => props.$overflow ?? DEFAULT_VALUE};
	position: ${props => props.$position ?? 'relative'};
	top: ${props => props.$top ?? DEFAULT_VALUE};
	left: ${props => props.$left ?? DEFAULT_VALUE};
	right: ${props => props.$right ?? DEFAULT_VALUE};
	bottom: ${props => props.$bottom ?? DEFAULT_VALUE};
`;
